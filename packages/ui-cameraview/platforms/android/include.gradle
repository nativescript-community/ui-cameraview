
import groovy.json.JsonSlurper

dependencies {
  def cameraxVersion =  project.hasProperty("cameraxVersion") ? project.cameraxVersion : "1.4.0-alpha03"
  implementation "androidx.camera:camera-core:${cameraxVersion}"
  implementation "androidx.camera:camera-camera2:${cameraxVersion}"
  implementation "androidx.camera:camera-lifecycle:${cameraxVersion}"
  implementation "androidx.camera:camera-video:${cameraxVersion}"

  implementation "androidx.camera:camera-view:${cameraxVersion}"
  implementation "androidx.camera:camera-extensions:${cameraxVersion}"

  def androidxVersion =  project.hasProperty("androidxVersion") ? project.androidxVersion : "1.6.0"
  implementation "androidx.core:core:$androidxVersion"
  def kotlinVersion =  project.hasProperty("kotlinVersion") ? project.kotlinVersion : "1.7.0"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

   def androidXExifInterfaceVersion =  project.hasProperty("androidXExifInterfaceVersion") ? project.androidXExifInterfaceVersion : "1.3.3"
   implementation "androidx.exifinterface:exifinterface:$androidXExifInterfaceVersion"


    def kotlinCoroutine =  project.hasProperty("kotlinCoroutine") ? project.kotlinCoroutine : "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutine"
  
    if (project.hasProperty("tempBuild")) {
        // we need to copy the code in both places as N main gradle system does not support top level code
        // for now we support only @nativescript/core and @akylas/nativescript
        // we should have a more generic way
    def widgetsDir = "$USER_PROJECT_ROOT/node_modules/@nativescript/core/platforms/android"
        def appPackageJsonFile = file("$USER_PROJECT_ROOT/package.json")
        if (appPackageJsonFile.exists()) {
            def appPackageJson = new JsonSlurper().parseText(appPackageJsonFile.text)
            if (appPackageJson.dependencies['@akylas/nativescript'] != null) {
                widgetsDir = "$USER_PROJECT_ROOT/node_modules/@akylas/nativescript/platforms/android"
            }
        }
  
        // if ui-mobile-base is provided as source the name is nativescript.aar
      //else use widget-release.aar
        if (file("$widgetsDir/widgets-release.aar").exists()) {
            implementation(name:'widgets-release', ext:'aar')
        } else {
            implementation(name:'nativescript', ext:'aar')
        }
    }
}

repositories {
    // we need to copy the code in both places as N main gradle system does not support top level code
    // for now we support only @nativescript/core and @akylas/nativescript
    // we should have a more generic way
    def widgetsDir = "$USER_PROJECT_ROOT/node_modules/@nativescript/core/platforms/android"
    def appPackageJsonFile = file("$USER_PROJECT_ROOT/package.json")
    if (appPackageJsonFile.exists()) {
        def appPackageJson = new JsonSlurper().parseText(appPackageJsonFile.text)
        if (appPackageJson.dependencies['@akylas/nativescript'] != null) {
            widgetsDir = "$USER_PROJECT_ROOT/node_modules/@akylas/nativescript/platforms/android"
        }
    }
    flatDir {
        dirs "$widgetsDir"
    }
}
